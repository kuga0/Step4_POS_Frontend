"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/get-pixels";
exports.ids = ["vendor-chunks/get-pixels"];
exports.modules = {

/***/ "(ssr)/./node_modules/get-pixels/node-pixels.js":
/*!************************************************!*\
  !*** ./node_modules/get-pixels/node-pixels.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar ndarray       = __webpack_require__(/*! ndarray */ \"(ssr)/./node_modules/ndarray/ndarray.js\")\nvar path          = __webpack_require__(/*! path */ \"path\")\nvar PNG           = (__webpack_require__(/*! pngjs */ \"(ssr)/./node_modules/pngjs/lib/png.js\").PNG)\nvar jpeg          = __webpack_require__(/*! jpeg-js */ \"(ssr)/./node_modules/jpeg-js/index.js\")\nvar pack          = __webpack_require__(/*! ndarray-pack */ \"(ssr)/./node_modules/ndarray-pack/convert.js\")\nvar GifReader     = (__webpack_require__(/*! omggif */ \"(ssr)/./node_modules/omggif/omggif.js\").GifReader)\nvar Bitmap        = __webpack_require__(/*! node-bitmap */ \"(ssr)/./node_modules/node-bitmap/index.js\")\nvar fs            = __webpack_require__(/*! fs */ \"fs\")\nvar request       = __webpack_require__(/*! request */ \"(ssr)/./node_modules/request/index.js\")\nvar mime          = __webpack_require__(/*! mime-types */ \"(ssr)/./node_modules/mime-types/index.js\")\nvar parseDataURI  = __webpack_require__(/*! parse-data-uri */ \"(ssr)/./node_modules/parse-data-uri/index.js\")\n\nfunction handlePNG(data, cb) {\n  var png = new PNG();\n  png.parse(data, function(err, img_data) {\n    if(err) {\n      cb(err)\n      return\n    }\n    cb(null, ndarray(new Uint8Array(img_data.data),\n      [img_data.width|0, img_data.height|0, 4],\n      [4, 4*img_data.width|0, 1],\n      0))\n  })\n}\n\nfunction handleJPEG(data, cb) {\n  var jpegData\n  try {\n    jpegData = jpeg.decode(data)\n  }\n  catch(e) {\n    cb(e)\n    return\n  }\n  if(!jpegData) {\n    cb(new Error(\"Error decoding jpeg\"))\n    return\n  }\n  var nshape = [ jpegData.height, jpegData.width, 4 ]\n  var result = ndarray(jpegData.data, nshape)\n  cb(null, result.transpose(1,0))\n}\n\nfunction handleGIF(data, cb) {\n  var reader\n  try {\n    reader = new GifReader(data)\n  } catch(err) {\n    cb(err)\n    return\n  }\n  if(reader.numFrames() > 0) {\n    var nshape = [reader.numFrames(), reader.height, reader.width, 4]\n    try  {\n      var ndata = new Uint8Array(nshape[0] * nshape[1] * nshape[2] * nshape[3])\n    } catch(err) {\n      cb(err)\n      return\n    }\n    var result = ndarray(ndata, nshape)\n    try {\n      for(var i=0; i<reader.numFrames(); ++i) {\n        reader.decodeAndBlitFrameRGBA(i, ndata.subarray(\n          result.index(i, 0, 0, 0),\n          result.index(i+1, 0, 0, 0)))\n      }\n    } catch(err) {\n      cb(err)\n      return\n    }\n    cb(null, result.transpose(0,2,1))\n  } else {\n    var nshape = [reader.height, reader.width, 4]\n    var ndata = new Uint8Array(nshape[0] * nshape[1] * nshape[2])\n    var result = ndarray(ndata, nshape)\n    try {\n      reader.decodeAndBlitFrameRGBA(0, ndata)\n    } catch(err) {\n      cb(err)\n      return\n    }\n    cb(null, result.transpose(1,0))\n  }\n}\n\nfunction handleBMP(data, cb) {\n  var bmp = new Bitmap(data)\n  try {\n    bmp.init()\n  } catch(e) {\n    cb(e)\n    return\n  }\n  var bmpData = bmp.getData()\n  var nshape = [ bmpData.getHeight(), bmpData.getWidth(), 4 ]\n  var ndata = new Uint8Array(nshape[0] * nshape[1] * nshape[2])\n  var result = ndarray(ndata, nshape)\n  pack(bmpData, result)\n  cb(null, result.transpose(1,0))\n}\n\n\nfunction doParse(mimeType, data, cb) {\n  switch(mimeType) {\n    case 'image/png':\n      handlePNG(data, cb)\n    break\n\n    case 'image/jpg':\n    case 'image/jpeg':\n      handleJPEG(data, cb)\n    break\n\n    case 'image/gif':\n      handleGIF(data, cb)\n    break\n\n    case 'image/bmp':\n      handleBMP(data, cb)\n    break\n\n    default:\n      cb(new Error(\"Unsupported file type: \" + mimeType))\n  }\n}\n\nmodule.exports = function getPixels(url, type, cb) {\n  if(!cb) {\n    cb = type\n    type = ''\n  }\n  if(Buffer.isBuffer(url)) {\n    if(!type) {\n      cb(new Error('Invalid file type'))\n      return\n    }\n    doParse(type, url, cb)\n  } else if(url.indexOf('data:') === 0) {\n    try {\n      var buffer = parseDataURI(url)\n      if(buffer) {\n        process.nextTick(function() {\n          doParse(type || buffer.mimeType, buffer.data, cb)\n        })\n      } else {\n        process.nextTick(function() {\n          cb(new Error('Error parsing data URI'))\n        })\n      }\n    } catch(err) {\n      process.nextTick(function() {\n        cb(err)\n      })\n    }\n  } else if(url.indexOf('http://') === 0 || url.indexOf('https://') === 0) {\n    request({url:url, encoding:null}, function(err, response, body) {\n      if(err) {\n        cb(err)\n        return\n      }\n\n      type = type;\n      if(!type){\n        if(response.getHeader !== undefined){\n\t  type = response.getHeader('content-type');\n\t}else if(response.headers !== undefined){\n\t  type = response.headers['content-type'];\n\t}\n      }\n      if(!type) {\n        cb(new Error('Invalid content-type'))\n        return\n      }\n      doParse(type, body, cb)\n    })\n  } else {\n    fs.readFile(url, function(err, data) {\n      if(err) {\n        cb(err)\n        return\n      }\n      type = type || mime.lookup(url)\n      if(!type) {\n        cb(new Error('Invalid file type'))\n        return\n      }\n      doParse(type, data, cb)\n    })\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/get-pixels/node-pixels.js\n");

/***/ })

};
;